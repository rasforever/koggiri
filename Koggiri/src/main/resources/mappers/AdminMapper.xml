<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kosta.koggiri.mapper.AdminMapper"><!--경로를 뜻하는 것이 아님!!! -->

	<select id="selectList" parameterType="SearchVO" resultType="SearchedEmpVO">
	<![CDATA[
		select e.emp_id, e.emp_nm, d.dept_nm , p.pos_nm from
		emp e,dept d,pos p
		where e.pos_id = p.pos_id and e.dept_id = d.dept_id
		and wstate_cd <> '1' and expire_dt is null
		]]>
		<if test="area=='emp_nm'">
		<![CDATA[
			and e.emp_nm like '%'|| #{searchKey}||'%'
			]]>
		</if>
		<if test="area=='emp_id'">
		<![CDATA[
			and e.emp_id like '%'|| #{searchKey}||'%'
			]]>
		</if>
		<if test="area=='dept_nm'">
		<![CDATA[
			and d.dept_nm like '%'|| #{searchKey}||'%'
			]]>
		</if>
		<if test="area=='pos_nm'">
		<![CDATA[
			and p.pos_nm like '%'|| #{searchKey}||'%'
			]]>
		</if>
		
	</select>

	<select id="mainEmp" resultType="EmpVO" parameterType="EmpVO">
		<![CDATA[
		select
		e.emp_id, e.emp_nm, d.dept_nm , p.pos_nm,e.tel_no from
		emp e,dept d,pos
		p
		where e.pos_id = p.pos_id and e.dept_id = d.dept_id
		and e.emp_id =
		#{emp_id}
		and WSTATE_CD = '0'
		]]>
	</select>

	<insert id="insertEmp" parameterType="EmpVO">
		insert into
		emp(emp_id,emp_nm,res_no,sex_id,nation_id,dept_id,pos_id,join_dt
		,wstate_cd,input_emp_id,input_sysdt)
		values(#{emp_id},#{emp_nm},#{res_no},#{sex_id},#{nation_id}
		,#{dept_id},#{pos_id},#{join_dt}
		,#{wstate_cd},#{input_emp_id},sysdate)
	</insert>

	<select id="findEmpid" parameterType="EmpVO" resultType="String">
		select
		max(emp_id) from emp
		where join_dt = #{join_dt}

	</select>

	<insert id="tempPass" parameterType="EmpVO">
		insert into
		member(mem_id,mem_pw,mem_aut_cd)
		values( #{emp_id},#{mem_pw},'A')

	</insert>

	<update id="tempPassUpdate" parameterType="Admin_MemberVO">
		update member set
		mem_pw = #{mem_pw}
		where mem_id = #{mem_id}

	</update>

	<update id='updateAtt' parameterType="String">
		update ATTENDANCE set
		ATT_TIME = to_char(sysdate, 'HH24:MI') WHERE EMP_ID = #{emp_id} and
		ATT_DT = to_char(sysdate,'YYYYMMDD')
	</update>


	<update id='updateLev' parameterType="String">
		update ATTENDANCE set
		LEA_TIME = to_char(sysdate, 'HH24:MI') WHERE EMP_ID = #{emp_id} and
		ATT_DT = to_char(sysdate,'YYYYMMDD')
	</update>
	
	<select id="selectW_L" parameterType="String" resultType="EmpTimeVO">
		select * from ATTENDANCE 
		 WHERE EMP_ID = #{emp_id} 
		 and ATT_DT = to_char(sysdate,'YYYYMMDD')
	</select> 

	<select id="searchEmp" resultType="EmpVO">
		select emp_id, emp_nm from emp
		where (emp_id like #{emp_id} or emp_nm like #{emp_id})
		and WSTATE_CD = '0'
	</select>

	<select id="searchatt_Emp" resultType="EmpVO">
		select DISTINCT e.emp_id as emp_id,
			e.emp_nm as emp_nm 
		from emp e, member m 
		where (e.emp_id like #{emp_id} or e.emp_nm like #{emp_id})
		and e.emp_id = m.mem_id and m.mem_aut_cd = 'A'
		and WSTATE_CD = '0'
	</select>

	<select id="list_notice" resultType="H_NoticeVO">
	<![CDATA[
		select notice.* from 
			(select rownum, n.* from 
				(select * from noticeboard order by n_date desc)
			 n ) notice
		where rownum < 5
	]]>
	</select>
	<select id="list_important" resultType="H_importantVO">
	<![CDATA[
		select import.* from 
			(select rownum, i.* from 
				(select * from importantboard order by i_date desc)
			 i ) import
		where rownum < 5
	]]>
	</select>
	<select id="list_calendar" parameterType="String" resultType="H_calendarVO">
	<![CDATA[
		select * from calendar where mem_id = #{emp_id} and show = 'y'
		and replace(START_DATE,'-','') <= to_char(sysdate, 'yyyymmdd')
        and replace(END_DATE,'-','') >= to_char(sysdate, 'yyyymmdd')
	]]>
	</select>


	<select id="resign_type" resultType="Res_TypeVO">
	<![CDATA[
		select * from res_type
	]]>
	</select>
	
	<select id="dept_info" resultType="Dept_TypeVO">
	<![CDATA[
		select dept_id, dept_nm from dept
	]]>
	</select>
	
	<select id="pos_info" resultType="Pos_TypeVO">
	<![CDATA[
		select pos_id, pos_nm from pos
	]]>
	</select>
	
	<select id="update_Personnel" parameterType="EmpInfo_AdminVO" statementType="CALLABLE">
		{CALL UPDATE_PERSONNEL(#{emp_id}, #{dept_id}, #{pos_id})}
	</select>
	
	<update id="update_modifyInformation_addr" parameterType="EmpInfo_AdminVO">
		update emp set 	addr = #{addr}	where emp_id = #{emp_id}
	</update>
	<update id="update_modifyInformation_tel" parameterType="EmpInfo_AdminVO">
		update emp set 	tel_no = #{tel_no}	where emp_id = #{emp_id}
	</update>
	<update id="update_modifyInformation_email" parameterType="EmpInfo_AdminVO">
		update emp set 	e_mail = #{e_mail}	where emp_id = #{emp_id}
	</update>
	
	<update id="update_resign" parameterType="EmpInfo_AdminVO">
		update emp set 	WSTATE_CD = '1', EXPIRE_DT = #{expire_dt}	where emp_id = #{emp_id}
	</update>
	
	<insert id="insert_resign" parameterType="EmpInfo_AdminVO">
		insert into resign (emp_id, res_type, expire_dt) values (#{emp_id},  #{res_type},#{expire_dt} )
	</insert>
	
	<sql id="search">
		<if test="searchKey != '' and searchKey != null ">
			where e.emp_id = #{searchKey}
		</if>
	</sql>

	<select id="select_per" parameterType="App_SearchVO" resultType="Per_AppVO">
		select p.emp_id as emp_id
	    ,  e.emp_nm as emp_nm
	    ,  p.per_cd as per_cd
	    ,  pt.per_nm as per_nm
	    ,  case when p.dept_id is null then ' ' else  p.dept_id end as dept_id
	    ,  case when p.dept_id is null then ' ' else (select d.dept_nm from dept d where p.dept_id = d.dept_id  ) end as dept_nm
	    ,  case when p.pos_id is null then ' ' else  p.pos_id end as pos_id
	    ,  case when p.pos_id is null then ' ' else (select po.pos_nm from pos po where p.pos_id = po.pos_id) end as pos_nm
	    ,  p.per_dt as per_dt
	    from personnel p
	    inner join emp e
	    on p.emp_id = e.emp_id
	    inner join per_type pt
	    on p.per_cd = pt.per_cd
    <include refid="search"></include>
    
    </select>
	
	<select id="select_res" parameterType="App_SearchVO" resultType="Res_AppVO">
		<![CDATA[
		select r.emp_id as emp_id
	    ,  e.emp_nm as emp_nm
	    ,  e.dept_id as dept_id
	    ,  d.dept_nm as dept_nm
	    ,  e.pos_id as pos_id
	    ,  p.pos_nm as pos_nm
	    ,  r.res_type as res_type
	    ,  re.res_name as res_name
	    ,  r.expire_dt as expire_dt
	    from resign r
	    inner join emp e
	    on r.emp_id = e.emp_id
	    inner join res_type re
	    on r.res_type = re.res_type
	    inner join dept d
	    on e.dept_id = d.dept_id
	    inner join pos p
	    on e.pos_id = p.pos_id
	    ]]>
    <include refid="search"></include>
    </select>
    
    <select id="msg_new_count" parameterType="EmpInfo_AdminVO" resultType="int">
   		 select  MAX(( select count(M.ck_yn) from MSG_LIST M, MSG_EMP_LIST ME 
              where M.msg_id = ME.msg_id
                and M.MSG_ID = (SELECT ml1.msg_id 
                				 from msg_emp_list ml1, msg_emp_list ml2 
                				where ml1.emp_id = #{emp_id} 
                				  and ml2.emp_id = e.emp_id 
                				  and ml1.msg_id =ml2.msg_id)
                and M.emp_id = e.emp_id
                and M.emp_id = ME.emp_id
                and M.CK_YN = 'n')) as c_count
	      from emp e      
	      inner join dept d
	      on e.dept_id = d.dept_id
	      inner join pos p
	      on e.pos_id = p.pos_id
	      where e.emp_id not in ('master',#{emp_id})
	      order by d.dept_sort, e.pos_id, e.emp_id
    </select>

	
	
</mapper>